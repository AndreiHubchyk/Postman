{
	"info": {
		"_postman_id": "59462d00-e92a-4706-b8bd-5f0b9ae728c3",
		"name": "HW_2_Postman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1__http://162.55.220.72:5005/first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Отправить запрос.\r",
							"//Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Проверить, что в body приходит правильный string.\r",
							"var HHH = pm.response.text();\r",
							"console.log(HHH)\r",
							"\r",
							"pm.test('Check_the_right_answ', function(){\r",
							"    pm.expect(HHH).to.include('This is the first responce from server!')\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "2__http://162.55.220.72:5005/user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// Спарсить response body в json.\r",
							"\r",
							"var JsonBody = pm.response.json();\r",
							"console.log(JsonBody);\r",
							"//Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"pm.test(\"Names\", function () {\r",
							"    pm.expect(JsonBody.name).to.eql('Andrei');\r",
							"});\r",
							"//Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"pm.test(\"Ages\", function () {\r",
							"    pm.expect(JsonBody.age).to.eql('18');\r",
							"});\r",
							"//Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"pm.test(\"Salaryy\", function () {\r",
							"    pm.expect(JsonBody.salary).to.eql(450);\r",
							"});\r",
							"//Спарсить request.\r",
							"var www = request.data;\r",
							"console.log(www)\r",
							"//Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"name_response = name_request\", function () {\r",
							"pm.expect(JsonBody.name).to.eql(request.data.name);\r",
							"})\r",
							"//Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"age_response = age_request\", function () {\r",
							"pm.expect(JsonBody.age).to.eql(request.data.age);\r",
							"})\r",
							"//Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"salary_response = salary_request\", function () {\r",
							"pm.expect(JsonBody.salary).to.eql(1 * request.data.salary);\r",
							"})\r",
							"//вывел в консоль name,age,salary\r",
							"console.log('name_response = name_request')\r",
							"console.log('age_response = age_request')\r",
							"console.log('salary_response = salary_request');\r",
							"//Вывести в консоль параметр family из response.\r",
							"console.log(JsonBody.family)\r",
							"//Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"pm.test(\"u_salary_1_5_request = u_salary_1_5_year_response\", function () {\r",
							"pm.expect(JsonBody.family.u_salary_1_5_year).to.eql(4 * JsonBody.salary);\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Andrei",
							"type": "text"
						},
						{
							"key": "age",
							"value": "18",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "450",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "http://162.55.220.72:5005/object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Спарсить response.\r",
							"var JsonBody = pm.response.json();\r",
							"//Спарсить request.\r",
							"var HHH = pm.request.url.query.toObject();\r",
							"console.log(HHH)\r",
							"//Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test('name_response = name_request', function (){\r",
							"    pm.expect (JsonBody.name).to.eql(HHH.name);\r",
							"});\r",
							"\r",
							"//Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test('age_response = age_request', function () {\r",
							"    pm.expect(JsonBody.age).to.eql(HHH.age);\r",
							"});\r",
							"\r",
							"//Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test('salary_response = salary_request', function () {\r",
							"    pm.expect(JsonBody.salary).to.eql(1* HHH.salary);\r",
							"});\r",
							"\r",
							"//Вывести в консоль параметр family из response.\r",
							"console.log(JsonBody.family);\r",
							"\r",
							"//\r",
							"console.log(JsonBody.family.pets.dog);\r",
							"\r",
							"//Проверить, что у параметра dog есть параметры name. \r",
							"pm.test('Dog_name', function() {\r",
							"    pm.expect(JsonBody.family.pets.dog).not.eql('name');\r",
							"});\r",
							"\r",
							"//Проверить, что у параметра dog есть параметры age.\r",
							"pm.test('Dog_age', function() {\r",
							"    pm.expect(JsonBody.family.pets.dog).to.have.any.key('age');\r",
							"});\r",
							"\r",
							"//вывел сразу два ключа\r",
							"pm.test('Dog_name_age', function() {\r",
							"    pm.expect(JsonBody.family.pets.dog).to.have.any.keys('name', 'age');\r",
							"});\r",
							"\r",
							"//Проверить, что параметр name имеет значение Luky.\r",
							"pm.test('Nmae_luky', function() {\r",
							"    pm.expect(JsonBody.family.pets.dog.name).to.eql('Luky');\r",
							"})\r",
							"\r",
							"//Проверить, что параметр age имеет значение 4.\r",
							"pm.test('Agedog_4', function(){\r",
							"    pm.expect(JsonBody.family.pets.dog.age).to.eql(4);\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Andrei&age=25&salary=450",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Andrei"
						},
						{
							"key": "age",
							"value": "25"
						},
						{
							"key": "salary",
							"value": "450"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "http://162.55.220.72:5005/object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Статус код 200\r",
							"pm.test(\"Status code is 200, OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Спарсить response body в json.\r",
							"var JsoNNN = pm.response.json();\r",
							"\r",
							"//Спарсить request.\r",
							"var Reqqq = pm.request.url.query.toObject();\r",
							"\r",
							"//Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test('Check_request_name', function (){\r",
							"    pm.expect(JsoNNN.name).to.eql(Reqqq.name);\r",
							"});\r",
							"\r",
							"//Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"pm.test('Check_request_age', function (){\r",
							"    pm.expect(JsoNNN.age).to.eql(1* Reqqq.age);\r",
							"});\r",
							"\r",
							"//Вывести в консоль параметр salary из request.\r",
							"console.log(Reqqq.salary);\r",
							"\r",
							"//Вывести в консоль параметр salary из response.\r",
							"console.log(JsoNNN.salary);\r",
							"\r",
							"//Вывести в консоль 0-й элемент параметра salary из response.\r",
							"console.log(JsoNNN.salary[0]);\r",
							"\r",
							"//Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"console.log(JsoNNN.salary[1]);\r",
							"\r",
							"//Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"console.log(JsoNNN.salary[2]);\r",
							"\r",
							"//Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"pm.test('Check_parametrs', function (){\r",
							"    pm.expect(JsoNNN.salary[0]).to.eql(1* Reqqq.salary);\r",
							"});\r",
							"\r",
							"//Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"pm.test('Check_param1', function () {\r",
							"    pm.expect(1* JsoNNN.salary[1]).to.eql(2* Reqqq.salary);\r",
							"});\r",
							"\r",
							"//Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"pm.test('Check_param2', function () {\r",
							"    pm.expect(1* JsoNNN.salary[2]).to.eql(3* Reqqq.salary);\r",
							"});\r",
							"\r",
							"//Создать в окружении переменную name\r",
							"//Создать в окружении переменную age\r",
							"//Создать в окружении переменную salary\r",
							"//Передать в окружение переменную name\r",
							"//Передать в окружение переменную age\r",
							"//Передать в окружение переменную salary\r",
							"pm.environment.set(\"Name\", JsoNNN.name);\r",
							"pm.environment.set(\"age\",  JsoNNN.age);\r",
							"pm.environment.set(\"salary\", JsoNNN.salary[0]);\r",
							"\r",
							"//Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"var salary_log = JsoNNN.salary;\r",
							"console.log(salary_log);\r",
							"\r",
							"for (var H of salary_log){\r",
							"    console.log('salary_:'+ H)\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Andrei&age=25&salary=450",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Andrei"
						},
						{
							"key": "age",
							"value": "25"
						},
						{
							"key": "salary",
							"value": "450"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "http://162.55.220.72:5005/user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Вставить параметр salary из окружения в request\r",
							"//Вставить параметр age из окружения в age\r",
							"//Вставить параметр name из окружения в name\r",
							"//Отправить запрос.\r",
							"//Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Спарсить response body в json.\r",
							"var ReSSS = pm.response.json();\r",
							"\r",
							"//Спарсить request.\r",
							"var Reqqq = request.data;\r",
							"\r",
							"//Проверить, что json response имеет параметр start_qa_salary\r",
							"pm.test('Check_Jsonreponse', function (){\r",
							"    pm.expect(ReSSS).to.have.property('start_qa_salary');\r",
							"});\r",
							"\r",
							"//Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"pm.test('Check_Jsonreponse_6month', function (){\r",
							"    pm.expect(ReSSS).to.have.property('qa_salary_after_6_months');\r",
							"});\r",
							"\r",
							"//Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"pm.test('Check_Jsonreponse_12month', function (){\r",
							"    pm.expect(ReSSS).to.have.property('qa_salary_after_12_months');\r",
							"});\r",
							"\r",
							"//Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"pm.test('Check_Jsonreponse_1.5year', function (){\r",
							"    pm.expect(ReSSS).to.have.property('qa_salary_after_1.5_year');\r",
							"});\r",
							"\r",
							"//Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"pm.test('Check_Jsonreponse_3.5year', function (){\r",
							"    pm.expect(ReSSS).to.have.property('qa_salary_after_3.5_years');\r",
							"});\r",
							"\r",
							"//Проверить, что json response имеет параметр person\r",
							"pm.test('Check_Jsonreponse_person', function (){\r",
							"    pm.expect(ReSSS).to.have.property('person');\r",
							"});\r",
							"\r",
							"//Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"pm.test('Check_response', function(){\r",
							"    pm.expect(ReSSS.start_qa_salary).to.eql(1* Reqqq.salary);\r",
							"});\r",
							"\r",
							"//Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"pm.test('Check_response_ex.15', function (){\r",
							"    pm.expect(ReSSS.qa_salary_after_6_months).to.eql(2* Reqqq.salary);\r",
							"});\r",
							"\r",
							"//Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"pm.test('Check_response_ex.16', function (){\r",
							"    pm.expect(ReSSS.qa_salary_after_12_months).to.eql(2.7* Reqqq.salary);\r",
							"});\r",
							"\r",
							"//Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"pm.test('Check_response_ex.17', function (){\r",
							"    pm.expect(1* 'ReSSS.qa_salary_after_1.5_years').to.eql(3.3* 'Reqqq.salary');\r",
							"});\r",
							"\r",
							"//Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"pm.test('Check_response_ex.18', function (){\r",
							"    pm.expect(1* 'ReSSS.qa_salary_after_3.5_years').to.eql(3.8* 'Reqqq.salary');\r",
							"});\r",
							"\r",
							"//Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"pm.test('Check_ex.19', function (){\r",
							"    pm.expect(ReSSS.person.u_name[1]).to.eql(1* Reqqq.salary);\r",
							"});\r",
							"\r",
							"//Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
							"pm.test('Check_ex.20', function (){\r",
							"    pm.expect(ReSSS.person.u_age).to.eql(1* Reqqq.age);\r",
							"});\r",
							"\r",
							"//Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"pm.test('Check_response_ex.21', function (){\r",
							"    pm.expect(1* 'ReSSS.u_salary_5_years').to.eql(4.2* 'Reqqq.salary');\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{Name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{Salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	]
}